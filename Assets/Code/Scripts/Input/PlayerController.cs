//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Code/Scripts/Input/PlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerController"",
    ""maps"": [
        {
            ""name"": ""In Game"",
            ""id"": ""4ec1e714-2674-4675-82ff-dd40e2973482"",
            ""actions"": [
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""5dcb6d5f-140e-4cc4-bd38-ddb799c6947c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""045eca1a-1723-4f19-b622-4c2061378a0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PowerActivate"",
                    ""type"": ""Button"",
                    ""id"": ""d3f8def3-84df-4a4a-b3dd-d660b8548f5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PowerDropRelease"",
                    ""type"": ""Button"",
                    ""id"": ""0e73ec47-d383-4f18-acf9-be5a7df95d2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuOpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""aa7543f4-3ab5-4078-99cb-9cb111ecb63d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""48ea9928-c064-43b7-9e03-5898b2e6daa9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bc2cc1bd-68a7-46ba-8ebb-b32f00ab2e19"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""606f83b5-c9b1-490a-b09a-715417b03856"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9c2440f-48bb-4b81-97e2-6a86d64ed615"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PowerActivate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c76acb9-328f-4414-b4da-5f69e58359d7"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PowerDropRelease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""dcd60e8f-52d0-42b0-a0d7-a7efaadd5bee"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64c31788-ebb9-48ab-af89-47fec2d5069e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b00d7fcd-057d-4ad8-9813-b08fe8b378d6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3795fe07-cb45-478b-9453-69f94faa43c0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ad0841f9-7f5a-45be-8afd-1499bd52a8d8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""968a4c6f-65eb-4b65-9fb4-2cbd61be3388"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuOpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // In Game
        m_InGame = asset.FindActionMap("In Game", throwIfNotFound: true);
        m_InGame_Dash = m_InGame.FindAction("Dash", throwIfNotFound: true);
        m_InGame_Shoot = m_InGame.FindAction("Shoot", throwIfNotFound: true);
        m_InGame_PowerActivate = m_InGame.FindAction("PowerActivate", throwIfNotFound: true);
        m_InGame_PowerDropRelease = m_InGame.FindAction("PowerDropRelease", throwIfNotFound: true);
        m_InGame_MenuOpenClose = m_InGame.FindAction("MenuOpenClose", throwIfNotFound: true);
        m_InGame_Move = m_InGame.FindAction("Move", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // In Game
    private readonly InputActionMap m_InGame;
    private IInGameActions m_InGameActionsCallbackInterface;
    private readonly InputAction m_InGame_Dash;
    private readonly InputAction m_InGame_Shoot;
    private readonly InputAction m_InGame_PowerActivate;
    private readonly InputAction m_InGame_PowerDropRelease;
    private readonly InputAction m_InGame_MenuOpenClose;
    private readonly InputAction m_InGame_Move;
    public struct InGameActions
    {
        private @PlayerController m_Wrapper;
        public InGameActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dash => m_Wrapper.m_InGame_Dash;
        public InputAction @Shoot => m_Wrapper.m_InGame_Shoot;
        public InputAction @PowerActivate => m_Wrapper.m_InGame_PowerActivate;
        public InputAction @PowerDropRelease => m_Wrapper.m_InGame_PowerDropRelease;
        public InputAction @MenuOpenClose => m_Wrapper.m_InGame_MenuOpenClose;
        public InputAction @Move => m_Wrapper.m_InGame_Move;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void SetCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterface != null)
            {
                @Dash.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnDash;
                @Shoot.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnShoot;
                @PowerActivate.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerActivate;
                @PowerActivate.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerActivate;
                @PowerActivate.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerActivate;
                @PowerDropRelease.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerDropRelease;
                @PowerDropRelease.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerDropRelease;
                @PowerDropRelease.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnPowerDropRelease;
                @MenuOpenClose.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMenuOpenClose;
                @MenuOpenClose.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMenuOpenClose;
                @MenuOpenClose.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMenuOpenClose;
                @Move.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_InGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @PowerActivate.started += instance.OnPowerActivate;
                @PowerActivate.performed += instance.OnPowerActivate;
                @PowerActivate.canceled += instance.OnPowerActivate;
                @PowerDropRelease.started += instance.OnPowerDropRelease;
                @PowerDropRelease.performed += instance.OnPowerDropRelease;
                @PowerDropRelease.canceled += instance.OnPowerDropRelease;
                @MenuOpenClose.started += instance.OnMenuOpenClose;
                @MenuOpenClose.performed += instance.OnMenuOpenClose;
                @MenuOpenClose.canceled += instance.OnMenuOpenClose;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public InGameActions @InGame => new InGameActions(this);
    public interface IInGameActions
    {
        void OnDash(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnPowerActivate(InputAction.CallbackContext context);
        void OnPowerDropRelease(InputAction.CallbackContext context);
        void OnMenuOpenClose(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
}
